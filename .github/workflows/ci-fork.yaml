name: CI (Fork)

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Action
        uses: hmarr/debug-action@v1.0.0

  buildkite:
    name: "Build and Test (GPUs on Builtkite)"
    runs-on: ubuntu-latest
    # only run if CI workflow ran on a fork
    if: >
      github.event.workflow_run.conclusion != 'skipped' &&
      github.event.workflow_run.conclusion != 'cancelled' &&
      github.event.workflow_run.head_repository.fork

    steps:
      - name: Fetch workflow conclusion
        id: workflow-conclusion
        run: |
          curl -s "${{ github.event.workflow_run.jobs_url }}" > workflow_run_jobs.json
          conclusion=$(jq -r '.jobs[] | select(.name | startswith("Build and Test (") | .conclusion' workflow_run_jobs.json | sort | uniq | paste -sd "," -)
          echo "::set-output name=build-and-test::${conclusion}"
        shell: bash

      - name: Trigger Buildkite Pipeline
        id: build
        uses: EnricoMi/trigger-pipeline-action@master
        # only run if CI workflow's build-and-test job succeeded and CI workflow ran on a fork
        if: >
          steps.workflow-conclusion.outputs.build-and-test == 'success'

        env:
          PIPELINE: "horovod/horovod"
          BRANCH: "${{ github.event.pull_request.head.ref }}"
          MESSAGE: "GPU Tests triggered by GitHub"
          BUILDKITE_API_ACCESS_TOKEN: ${{ secrets.BUILDKITE_TOKEN }}
          BUILD_ENV_VARS: "{\"PIPELINE_MODE\": \"GPU FULL\"}"

      - name: Download Buildkite Artifacts
        uses: docker://ghcr.io/enricomi/download-buildkite-artifact-action:v1
        with:
          github_token: ${{ github.token }}
          buildkite_token: ${{ secrets.BUILDKITE_TOKEN }}
          buildkite_build_url: ${{ steps.build.outputs.url }}
          ignore_build_states: blocked,canceled,skipped,not_run
          ignore_job_states: timed_out
          output_path: artifacts/Unit Test Results - GPUs on Buildkite

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Unit Test Results - GPUs on Builtkite
          path: artifacts/Unit Test Results - GPUs on Buildkite/**/*.xml

  publish-unit-test-results:
    name: "Publish Unit Tests Results"
    needs: [buildkite]
    runs-on: ubuntu-latest
    # only run if CI workflow ran on a fork
    if: >
      github.event.workflow_run.conclusion != 'skipped' &&
      github.event.workflow_run.conclusion != 'cancelled' &&
      github.event.workflow_run.head_repository.fork

    steps:
      - name: Debug Action
        uses: hmarr/debug-action@v2.0.0

      - name: Download and Extract Artifacts
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          mkdir -p artifacts && cd artifacts

          artifacts_url=${{ github.event.workflow_run.artifacts_url }}

          gh api "$artifacts_url" -q '.artifacts[] | [.name, .archive_download_url] | @tsv' | while read artifact
          do
            IFS=$'\t' read name url <<< "$artifact"
            gh api $url > "$name.zip"
            unzip -d "$name" "$name.zip"
          done

      - name: Download Buildkite Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          files: "artifacts/*/**/*.xml"
