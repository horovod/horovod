name: docker

on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    # only consider push to master and tags
    # otherwise modify job.config.outputs.push
    branches: [ master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

jobs:
  config:
    name: Configure workflow
    runs-on: ubuntu-latest
    outputs:
      # run workflow for all events on Horovod repo and non-schedule events on forks
      run: ${{ github.repository == 'horovod/horovod' || github.event_name != 'schedule' }}
      # push images only from Horovod repo and for schedule and push events
      push: ${{ github.repository == 'horovod/horovod' && contains('schedule,push', github.event_name) }}

    steps:
      - name: Nothing to do
        run: true

  docker:
    name: Build docker image ${{ matrix.docker-image }} (push=${{ needs.config.outputs.push }})
    if: needs.config.outputs.run == 'true'
    needs: config
    runs-on: ubuntu-latest

    # we want an ongoing run of this workflow to be canceled by a later commit
    # so that there is only one concurrent run of this workflow for each branch
    concurrency:
      # github.ref means something like refs/heads/master or refs/tags/v0.22.1 or the branch.
      # This helps to not cancel concurrent runs on master and a tag that share the same commit
      # head_ref refers to the pull request branch so we run only one workflow for the given pull request.
      # On master, head_ref is empty, so we use the SHA of the commit, this means
      # commits to master will not be cancelled, which is important to ensure
      # that every commit to master is full tested and deployed.
      group: docker-${{ matrix.docker-image }}-${{ github.ref }}-${{ github.head_ref || github.sha }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        docker-image:
          - horovod
          - horovod-cpu
          - horovod-ray

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: |
            horovod/${{ matrix.docker-image }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: needs.config.outputs.push == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Clean up disk space
        # deleting these paths frees 38 GB disk space:
        #   sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        # but this sometimes takes 3-4 minutes
        # so we delete only some sub-paths which are known to be quick (10s) and 20 GB
        run: |
          echo ::group::Disk space before clean up
          df -h
          echo ::endgroup::

          for dir in /usr/share/dotnet/sdk/\*/nuGetPackagesArchive.lzma \
                     /usr/share/dotnet/shared \
                     /usr/local/lib/android/sdk/ndk \
                     /usr/local/lib/android/sdk/build-tools \
                     /opt/ghc
          do
            echo ::group::Deleting "$dir"
            sudo du -hsc $dir | tail -n1 || true
            sudo rm -rf $dir
            echo ::endgroup::
          done

          echo ::group::Disk space after clean up
          df -h
          echo ::endgroup::

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/${{ matrix.docker-image }}/Dockerfile
          push: ${{ needs.config.outputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Show free space
        if: always()
        run: |
          echo ::group::Disk Space
          df -h
          echo ::endgroup::

          echo ::group::Docker Space
          docker system df
          echo ::endgroup::

          echo ::group::Docker Images
          docker images -a
          echo ::endgroup::

          echo ::group::Docker Container
          docker container list -a
          echo ::endgroup::
