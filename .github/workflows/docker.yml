name: docker

on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    branches: [ master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

jobs:
  docker:
    name: Build docker image ${{ matrix.docker-image }} (push=${{ github.event_name != 'pull_request' }})
    runs-on: ubuntu-latest

    # we want an ongoing run of this workflow to be canceled by a later commit
    # so that there is only one concurrent run of this workflow for each branch
    concurrency:
      # head_ref will mean only one workflow can run for the given pull request.
      # On master, head_ref is empty, so we use the SHA of the commit, this means
      # commits to master will not be cancelled, which is important to ensure
      # that every commit to master is full tested and deployed.
      group: docker-${{ matrix.docker-image }}-${{ github.head_ref || github.sha }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        docker-image:
          - horovod
          - horovod-cpu
          - horovod-ray

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: |
            horovod/${{ matrix.docker-image }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cleanup Docker
        run: docker image prune -a --force

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/${{ matrix.docker-image }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
