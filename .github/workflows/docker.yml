name: docker

on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    branches: [ master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

# we want an ongoing run of this workflow to be canceled by a later commit
# so that there is only one concurrent run of this workflow for each branch
concurrency:
  group: docker-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label-horovod: ${{ steps.start-ec2-runner-horovod.outputs.label }}
      label-horovod-cpu: ${{ steps.start-ec2-runner-horovod-cpu.outputs.label }}
      label-horovod-ray: ${{ steps.start-ec2-runner-horovod-ray.outputs.label }}
      ec2-instance-id-horovod: ${{ steps.start-ec2-runner-horovod.outputs.ec2-instance-id }}
      ec2-instance-id-horovod-cpu: ${{ steps.start-ec2-runner-horovod-cpu.outputs.ec2-instance-id }}
      ec2-instance-id-horovod-ray: ${{ steps.start-ec2-runner-horovod-ray.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 runner (horovod)
        id: start-ec2-runner-horovod
        uses: machulav/ec2-github-runner@v2.2.0
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0759580dedc953d1f
          ec2-instance-type: r5.large
          subnet-id: subnet-0983be43
          security-group-id: sg-4cba0d08
      - name: Start EC2 runner (horovod-cpu)
        id: start-ec2-runner-horovod-cpu
        uses: machulav/ec2-github-runner@v2.2.0
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0759580dedc953d1f
          ec2-instance-type: r5.large
          subnet-id: subnet-0983be43
          security-group-id: sg-4cba0d08
      - name: Start EC2 runner (horovod-ray)
        id: start-ec2-runner-horovod-ray
        uses: machulav/ec2-github-runner@v2.2.0
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0759580dedc953d1f
          ec2-instance-type: r5.large
          subnet-id: subnet-0983be43
          security-group-id: sg-4cba0d08

  docker:
    if: github.repository_owner == 'horovod'
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ matrix.label }} # run the job on the newly created runners
    strategy:
      fail-fast: false
      matrix:
        include:
          - docker-image: horovod
            label: ${{ needs.start-runner.outputs.label-horovod }}
          - docker-image: horovod-cpu
            label: ${{ needs.start-runner.outputs.label-horovod-cpu }}
          - docker-image: horovod-ray
            label: ${{ needs.start-runner.outputs.label-horovod-ray }}
    name: docker ${{ matrix.docker-image }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      -
        name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: |
            horovod/${{ matrix.docker-image }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/${{ matrix.docker-image }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - docker # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: always() # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner (horovod)
        uses: machulav/ec2-github-runner@v2.2.0
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label-horovod }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id-horovod }}
      - name: Stop EC2 runner (horovod-cpu)
        uses: machulav/ec2-github-runner@v2.2.0
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label-horovod-cpu }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id-horovod-cpu }}
      - name: Stop EC2 runner (horovod-ray)
        uses: machulav/ec2-github-runner@v2.2.0
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label-horovod-ray }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id-horovod-ray }}
